<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.8.0.0 -->
  <assembly>
    <name>UnityEngine.TilemapModule</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Tilemaps.ITilemap">
      <summary>
        <para>Class passed onto tiles when information is queried from the tiles.</para>
        <para>This handles editor preview tiles when painting on a <see cref="UnityEngine.Tilemaps.Tilemap"></see> in Editor mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.Tile">
      <summary>
        <para>Class for a default tile in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
        <para>This inherits from <see cref="UnityEngine.Tilemaps.TileBase"></see> and represents a default tile to be placed in a <see cref="UnityEngine.Tilemaps.Tilemap"></see>. It implements <see cref="UnityEngine.Tilemaps.TileBase.GetTileData"></see> for simple rendering of a <see cref="UnityEngine.Sprite"></see> in the tile map.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.Tile.ColliderType">
      <summary>Enum for determining what collider shape is generated for this <see cref="UnityEngine.Tilemaps.Tile"></see> by the <see cref="UnityEngine.Tilemaps.TilemapCollider2D"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TileAnimationData">
      <summary>A Struct for the required data for animating a <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TileBase">
      <summary>
        <para>Base class for a tile in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
        <para>Inherit from this to implement your custom tile to be placed in a <see cref="UnityEngine.Tilemaps.Tilemap"></see> component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TileData">
      <summary>A Struct for the required data for rendering a <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.Tilemap">
      <summary>The tile map stores sprites in a layout marked by a <see cref="UnityEngine.Grid"></see> component.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.Tilemap.Orientation">
      <summary>Determines the orientation of tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TilemapCollider2D">
      <summary>Collider for 2D physics representing shapes defined by the corresponding <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TilemapRenderer">
      <summary>
        <para>The tile map renderer is used to render the tile map marked out by a tile map component and a grid component.</para>
        <para>This class is a script interface for a tile map renderer component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TilemapRenderer.SortOrder">
      <summary>Sort order for all tiles rendered by the <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Tilemaps.TileFlags">
      <summary>Flags controlling behavior for the <see cref="UnityEngine.Tilemaps.TileBase"></see>.</summary>
    </member>
    <member name="T:UnityEngine.GridBrushBase">
      <summary>
        <para>Base class for authoring data on a grid with grid painting tools like paint, erase, pick, select and fill.</para>
        <para>Inheriting this class and/or creating brush asset instances from your inherited class, you can create custom brushes which react to high level grid events like paint, erase, pick, select and fill.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GridBrushBase.FlipAxis">
      <summary>Axis to flip tiles in the GridBrushBase by.</summary>
    </member>
    <member name="T:UnityEngine.GridBrushBase.RotationDirection">
      <summary>Direction to rotate tiles in the GridBrushBase by.</summary>
    </member>
    <member name="T:UnityEngine.GridBrushBase.Tool">
      <summary>Tool mode for the <see cref="UnityEngine.GridBrushBase"></see>.</summary>
    </member>
    <member name="T:UnityEngine.CustomGridBrushAttribute">
      <summary>Attribute to define the class as a grid brush and to make it available in the palette window.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.XY">
      <summary>Orients tiles in the XY plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.XZ">
      <summary>Orients tiles in the XZ plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.YX">
      <summary>Orients tiles in the YX plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.YZ">
      <summary>Orients tiles in the YZ plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.ZX">
      <summary>Orients tiles in the ZX plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.ZY">
      <summary>Orients tiles in the ZY plane.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tilemap.Orientation.Custom">
      <summary>
        <para>Use a custom orientation to all tiles in the tile map.</para>
        <para>Set the custom orientation into <see cref="UnityEngine.Tilemaps.Tilemap.orientationMatrix"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tile.color">
      <summary>
        <see cref="UnityEngine.Color">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tile.flags">
      <summary>
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tile.gameObject">
      <summary>
        <para>
          <see cref="UnityEngine.GameObject">
          </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</para>
        <para>This <see cref="UnityEngine.GameObject"></see> will be instantiated at the start of the scene at the <see cref="UnityEngine.Tilemaps.Tile"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tile.sprite">
      <summary>
        <see cref="UnityEngine.Sprite">
        </see> to be rendered at the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tile.transform">
      <summary>Transform matrix of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tile.GetTileData(UnityEngine.Vector3Int,UnityEngine.Tilemaps.ITilemap,UnityEngine.Tilemaps.TileData@)">
      <summary>Retrieves the tile rendering data for the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tilemap">The <see cref="UnityEngine.Tilemaps.Tilemap"></see> the tile is present on.</param>
      <param name="tileData">Data to render the tile. This is filled with <see cref="UnityEngine.Tilemaps.Tile"></see>, <see cref="UnityEngine.Tilemaps.Tile.color"></see> and <see cref="UnityEngine.Tilemaps.Tile.transform"></see>.</param>
      <returns>Whether the call was successful. This returns true for <see cref="UnityEngine.Tilemaps.Tile"></see>.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetTransformMatrix(UnityEngine.Vector3Int,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets the transform matrix of a tile given the XYZ coordinates of a cell in the tile map.</para>
        <para>Note that if the tile has set <see cref="UnityEngine.Tilemaps.TileFlags.LockTransform"></see>, then this matrix has no effect.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="transform">The transform matrix.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SwapTile(UnityEngine.Tilemaps.TileBase,UnityEngine.Tilemaps.TileBase)">
      <summary>Swaps all existing tiles of changeTile to newTile and refreshes all the swapped tiles.</summary>
      <param name="changeTile">Tile to swap.</param>
      <param name="newTile">Tile to swap to.</param>
    </member>
    <member name="P:UnityEngine.Tilemaps.ITilemap.cellBounds">
      <summary>Returns the boundaries of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cell size.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.ITilemap.localBounds">
      <summary>Returns the boundaries of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in local space size.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.ITilemap.origin">
      <summary>The origin of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cell position.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.ITilemap.size">
      <summary>The size of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cells.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.GetColor(UnityEngine.Vector3Int)">
      <summary>Gets the color of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Color of the tile at the XY coordinate.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.editorPreviewOrigin">
      <summary>
        <para>The origin of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cell position inclusive of editor preview tiles.</para>
        <para>This is used when rendering the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in Editor mode, taking both placed tiles and editor preview tiles for preview placement into account.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.editorPreviewSize">
      <summary>
        <para>The size of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cells inclusive of editor preview tiles.</para>
        <para>This is used when rendering the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in Editor mode, taking both placed tiles and editor preview tiles for preview placement into account.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.GetSprite(UnityEngine.Vector3Int)">
      <summary>Gets the Sprite used in a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Sprite at the XY coordinate.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.layoutGrid">
      <summary>Gets the <see cref="UnityEngine.Grid"></see> associated with this tile map.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.localBounds">
      <summary>Returns the boundaries of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in local space size.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.GetTile(UnityEngine.Vector3Int)">
      <summary>Gets the tile at the given XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Tile placed at the cell.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.orientation">
      <summary>Orientation of the tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.orientationMatrix">
      <summary>
        <para>Orientation Matrix of the orientation of the tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
        <para>This matrix can be customised if the orientation of the tiles is set to <see cref="UnityEngine.Tilemaps.Tilemap.Orientation.Custom"></see>.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.GetTileFlags(UnityEngine.Vector3Int)">
      <summary>Gets the <see cref="UnityEngine.Tilemaps.TileFlags"></see> of the <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> from the <see cref="UnityEngine.Tilemaps.Tile"></see>.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.origin">
      <summary>
        <para>The origin of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cell position.</para>
        <para>This takes into consideration only placed tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.size">
      <summary>
        <para>The size of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cells.</para>
        <para>This takes into consideration only placed tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.GetTransformMatrix(UnityEngine.Vector3Int)">
      <summary>Gets the transform matrix of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>The transform matrix.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.tileAnchor">
      <summary>Gets the anchor point of tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.ITilemap.RefreshTile(UnityEngine.Vector3Int)">
      <summary>
        <para>Refreshes a tile at the given XYZ coordinates of a cell in the tile map.</para>
        <para>The tile map will retrieve the rendering data, animation data and other data for the tile and update all relevant components.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.AddTileFlags(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileFlags)">
      <summary>Adds the <see cref="UnityEngine.Tilemaps.TileFlags"></see> onto the <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="flags">
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> to add (with bitwise or) onto the flags provided by <see cref="UnityEngine.Tilemaps.Tile"></see>.<see cref="UnityEngine.Tilemaps.TileBase"></see>.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.BoxFill(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Does a box fill with the given tile on the tile map. Starts from given coordinates and fills the limits from start to end (inclusive).</para>
        <para>If the limits are larger than the tilemap bounds, the limits will be capped to the tilemap bounds.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">Tile to place.</param>
      <param name="startX">The minimum X coordinate limit to fill to.</param>
      <param name="startY">The minimum Y coordinate limit to fill to.</param>
      <param name="endX">The maximum X coordinate limit to fill to.</param>
      <param name="endY">The maximum Y coordinate limit to fill to.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.ClearAllEditorPreviewTiles">
      <summary>Clears all editor preview tiles that are placed in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.ClearAllTiles">
      <summary>
        <para>Clears all tiles that are placed in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
        <para>This will also resize the Tilemap to its default values. In the Editor, this will also clear all editor preview tiles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.CompressBounds">
      <summary>Compresses the <see cref="UnityEngine.Tilemaps.Tilemap.origin"></see> and <see cref="UnityEngine.Tilemaps.Tilemap.size"></see> of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> to bounds where tiles exist.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.ContainsTile(UnityEngine.Tilemaps.TileBase)">
      <summary>Returns true if the <see cref="UnityEngine.Tilemaps.Tilemap"></see> contains the given tile. Returns false if not.</summary>
      <param name="tileAsset">Tile to check.</param>
      <returns>Whether the <see cref="UnityEngine.Tilemaps.Tilemap"></see> contains the tile.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.EditorPreviewBoxFill(UnityEngine.Vector3Int,UnityEngine.Object,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Does an editor preview of a box fill with the given tile on the tile map. Starts from given coordinates and fills the limits from start to end (inclusive).</para>
        <para>The editor preview is used for previewing possible additions to the tile map.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">Tile to place.</param>
      <param name="startX">The start X coordinate limit to fill to.</param>
      <param name="startY">The start Y coordinate limit to fill to.</param>
      <param name="endX">The ending X coordinate limit to fill to.</param>
      <param name="endY">The ending Y coordinate limit to fill to.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.EditorPreviewFloodFill(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase)">
      <summary>
        <para>Does an editor preview of a flood fill with the given tile to place. on the tile map starting from the given coordinates.</para>
        <para>The editor preview is used for previewing possible additions to the tile map.</para>
      </summary>
      <param name="position">Start position of the flood fill on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">
        <see cref="UnityEngine.Tilemaps.TileBase">
        </see> to place.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.FloodFill(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase)">
      <summary>Does a flood fill with the given tile to place. on the tile map starting from the given coordinates.</summary>
      <param name="position">Start position of the flood fill on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">Tile to place.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetCellCenterLocal(UnityEngine.Vector3Int)">
      <summary>
        <para>Get the logical center coordinate of a grid cell in local space.</para>
        <para>In a rectangular grid layout, a call to <see cref="UnityEngine.Tilemaps.Tilemap.CellToLocal"></see> with <see cref="UnityEngine.Vector3Int"></see> parameter, returns a <see cref="UnityEngine.Vector3"></see> coordinate that represents the bottom-left of the cell. While mathematically correct, you may prefer the center of the cell, for example when instantiating a GameObject into the grid.</para>
      </summary>
      <param name="position">Grid cell position.</param>
      <returns>Center of the cell transformed into local space coordinates.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetCellCenterWorld(UnityEngine.Vector3Int)">
      <summary>
        <para>Get the logical center coordinate of a grid cell in world space.</para>
        <para>In a rectangular grid layout, a call to <see cref="UnityEngine.Tilemaps.Tilemap.CellToWorld"></see> with <see cref="UnityEngine.Vector3Int"></see> parameter, returns a <see cref="UnityEngine.Vector3"></see> coordinate that represents the bottom-left of the cell. This is mathematically correct, but when for example instantiating a GameObject into the grid, you prefer the center of the cell instead.</para>
      </summary>
      <param name="position">Grid cell position.</param>
      <returns>Center of the cell transformed into world space coordinates.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetColliderType(UnityEngine.Vector3Int)">
      <summary>Gets the collider type of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Collider type of the tile at the XY coordinate.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetColor(UnityEngine.Vector3Int)">
      <summary>Gets the color of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Color of the tile at the XY coordinate.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetEditorPreviewColor(UnityEngine.Vector3Int)">
      <summary>Gets the Color of an editor preview tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Color of the editor preview tile at the XY coordinate.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetEditorPreviewSprite(UnityEngine.Vector3Int)">
      <summary>Gets the Sprite used in an editor preview tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Sprite at the XY coordinate.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetEditorPreviewTile(UnityEngine.Vector3Int)">
      <summary>Gets the editor preview tile at the given XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>The editor preview Tile placed at the cell.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetEditorPreviewTileFlags(UnityEngine.Vector3Int)">
      <summary>Gets the <see cref="UnityEngine.Tilemaps.TileFlags"></see> of the editor preview <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> from the editor preview <see cref="UnityEngine.Tilemaps.Tile"></see>.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetEditorPreviewTransformMatrix(UnityEngine.Vector3Int)">
      <summary>Gets the transform matrix of an editor preview tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>The transform matrix.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetInstantiatedObject(UnityEngine.Vector3Int)">
      <summary>Gets the GameObject instantiated by a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>GameObject instantiated by the Tile at the position.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetSprite(UnityEngine.Vector3Int)">
      <summary>Gets the Sprite used in a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>Sprite at the XY coordinate.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetTile(UnityEngine.Vector3Int)">
      <summary>Gets the tile at the given XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>
        <see cref="UnityEngine.Tilemaps.TileBase">
        </see> placed at the cell.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetTileFlags(UnityEngine.Vector3Int)">
      <summary>Gets the <see cref="UnityEngine.Tilemaps.TileFlags"></see> of the <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> from the <see cref="UnityEngine.Tilemaps.Tile"></see>.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetTilesBlock(UnityEngine.BoundsInt)">
      <summary>
        <para>Retrieves an array of tiles with the given bounds.</para>
        <para>This is meant for more a performant way to get tiles as a batch, when compared to calling GetTile for every single position. The bounds size must match the array size. For example bounds of 1x2x3 needs an array length of 6.</para>
      </summary>
      <param name="bounds">Bounds to retrieve from.</param>
      <returns>An array of Tiles at the given bounds.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetTransformMatrix(UnityEngine.Vector3Int)">
      <summary>Gets the transform matrix of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <returns>The transform matrix.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetUsedTilesCount">
      <summary>Get the total number of different tiles used in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</summary>
      <returns>The total number of different tiles used in the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.GetUsedTilesNonAlloc(UnityEngine.Tilemaps.TileBase[])">
      <summary>
        <para>Fills the given array with the total number of different tiles used in the <see cref="UnityEngine.Tilemaps.Tilemap"></see> and returns the number of tiles filled.</para>
        <para>If the size of the given array is less than the total number of tiles used in the tile map, this will try to fill the array as much as possible.</para>
      </summary>
      <param name="usedTiles">The array to be filled.</param>
      <returns>The number of tiles filled.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.HasEditorPreviewTile(UnityEngine.Vector3Int)">
      <summary>Returns whether there is an editor preview tile at the position.</summary>
      <param name="position">Position to check.</param>
      <returns>True if there is an editor preview tile at the position. False if not.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.HasTile(UnityEngine.Vector3Int)">
      <summary>Returns whether there is a tile at the position.</summary>
      <param name="position">Position to check.</param>
      <returns>True if there is a tile at the position. False if not.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.RefreshAllTiles">
      <summary>Refreshes all tiles in the tile map. The tile map will retrieve the rendering data, animation data and other data for all tiles and update all relevant components.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.RefreshTile(UnityEngine.Vector3Int)">
      <summary>
        <para>Refreshes a tile at the given coordinates of a cell in the tile map.</para>
        <para>The tile map will retrieve the rendering data, animation data and other data for the tile and update all relevant components.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.RemoveTileFlags(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileFlags)">
      <summary>Removes the <see cref="UnityEngine.Tilemaps.TileFlags"></see> onto the <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="flags">
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> to remove from the <see cref="UnityEngine.Tilemaps.Tile"></see>.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.ResizeBounds">
      <summary>
        <para>Resizes tiles in the <see cref="UnityEngine.Tilemaps.Tilemap"></see> to bounds defined by <see cref="UnityEngine.Tilemaps.Tilemap.origin"></see> and <see cref="UnityEngine.Tilemaps.Tilemap.size"></see>.</para>
        <para>Tiles outside of the bounds will be removed from the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetColor(UnityEngine.Vector3Int,UnityEngine.Color)">
      <summary>Sets the color of a tile given the XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="color">Color to set the tile to at the XY coordinate.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetEditorPreviewColor(UnityEngine.Vector3Int,UnityEngine.Color)">
      <summary>
        <para>Sets the color of an editor preview tile given the XYZ coordinates of a cell in the tile map.</para>
        <para>The editor preview tile is used for previewing possible additions to the tile map.</para>
      </summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="color">Color to set the editor preview tile to at the XY coordinate.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetEditorPreviewTile(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase)">
      <summary>
        <para>Sets an editor preview tile given the XYZ coordinates of a cell in the tile map.</para>
        <para>The editor preview tile is used for previewing possible additions to the tile map.</para>
      </summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">The editor preview Tile to be placed the cell.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetEditorPreviewTransformMatrix(UnityEngine.Vector3Int,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets the transform matrix of an editor preview tile given the XYZ coordinates of a cell in the tile map.</para>
        <para>The editor preview tile is used for previewing possible additions to the tile map.</para>
      </summary>
      <param name="position">Position of the editor preview Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="transform">The transform matrix.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetTile(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase)">
      <summary>Sets a tile at the given XYZ coordinates of a cell in the tile map.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tile">Tile to be placed the cell.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetTileFlags(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileFlags)">
      <summary>Sets the <see cref="UnityEngine.Tilemaps.TileFlags"></see> onto the <see cref="UnityEngine.Tilemaps.Tile"></see> at the given position.</summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="flags">
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> to add onto the <see cref="UnityEngine.Tilemaps.Tile"></see>.</param>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetTiles(UnityEngine.Vector3Int[],UnityEngine.Tilemaps.TileBase[])">
      <summary>Sets an array of tiles at the given XYZ coordinates of the corresponding cells in the tile map.</summary>
      <param name="positionArray">An array of positions of Tiles on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tileArray">An array of Tiles to be placed.</param>
    </member>
    <member name="F:UnityEngine.Tilemaps.TilemapRenderer.SortOrder.BottomLeft">
      <summary>
        <para>Sorts tiles for rendering starting from the tile with the lowest X and the lowest Y cell positions.</para>
        <para>The <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> will iterate through tiles by the next higher X value first before tiles with a higher Y value.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.Tilemap.SetTilesBlock(UnityEngine.BoundsInt,UnityEngine.Tilemaps.TileBase[])">
      <summary>
        <para>Fills bounds with array of tiles.</para>
        <para>This is meant for a more performant way to set tiles as a batch, when compared to calling SetTile for every single tile. The bounds size must match the array size. For example bounds of 1x2x3 needs an array length of 6.</para>
      </summary>
      <param name="position">Bounds to be filled.</param>
      <param name="tileArray">An array of Tiles to be placed.</param>
    </member>
    <member name="F:UnityEngine.Tilemaps.TilemapRenderer.SortOrder.BottomRight">
      <summary>
        <para>Sorts tiles for rendering starting from the tile with the highest X and the lowest Y cell positions.</para>
        <para>The <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> will iterate through tiles by the next lower X value first before tiles with a higher Y value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.TilemapRenderer.SortOrder.TopLeft">
      <summary>
        <para>Sorts tiles for rendering starting from the tile with the lowest X and the highest Y cell positions.</para>
        <para>The <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> will iterate through tiles by the next higher X value first before tiles with a lower Y value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.TilemapRenderer.SortOrder.TopRight">
      <summary>
        <para>Sorts tiles for rendering starting from the tile with the highest X and the lowest Y cell positions.</para>
        <para>The <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> will iterate through tiles by the next lower X value first before tiles with a lower Y value.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.TileBase.GetTileAnimationData(UnityEngine.Vector3Int,UnityEngine.Tilemaps.ITilemap,UnityEngine.Tilemaps.TileAnimationData@)">
      <summary>
        <para>Retrieves any tile animation data from the scripted tile.</para>
        <para>Implement this and fill in the <see cref="UnityEngine.Tilemaps.TileAnimationData"></see> to have the <see cref="UnityEngine.Tilemaps.Tilemap"></see> run an animation for the tile.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tilemap">The <see cref="UnityEngine.Tilemaps.Tilemap"></see> the tile is present on.</param>
      <param name="tileAnimationData">Data to run an animation on the tile.</param>
      <returns>Whether the call was successful.</returns>
    </member>
    <member name="M:UnityEngine.Tilemaps.TileBase.GetTileData(UnityEngine.Vector3Int,UnityEngine.Tilemaps.ITilemap,UnityEngine.Tilemaps.TileData@)">
      <summary>
        <para>Retrieves any tile rendering data from the scripted tile.</para>
        <para>Implement this and fill in the <see cref="UnityEngine.Tilemaps.TileData"></see> to have the <see cref="UnityEngine.Tilemaps.Tilemap"></see> to render the tile.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tilemap">The <see cref="UnityEngine.Tilemaps.Tilemap"></see> the tile is present on.</param>
      <param name="tileData">Data to render the tile.</param>
      <returns>Whether the call was successful.</returns>
    </member>
    <member name="F:UnityEngine.Tilemaps.TileFlags.None">
      <summary>No <see cref="UnityEngine.Tilemaps.TileFlags"></see> are set.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.TileBase.RefreshTile(UnityEngine.Vector3Int,UnityEngine.Tilemaps.ITilemap)">
      <summary>
        <para>This method is called when the tile is refreshed.</para>
        <para>Implement this and call <see cref="UnityEngine.Tilemaps.Tilemap.RefreshTile"></see> on all affected tiles on the <see cref="UnityEngine.Tilemaps.Tilemap"></see> including the tile at the given position to refresh them. This is also useful if the placement of a tile affects the properties of neighboring tiles.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tilemap">The <see cref="UnityEngine.Tilemaps.Tilemap"></see> the tile is present on.</param>
    </member>
    <member name="F:UnityEngine.Tilemaps.TileFlags.LockColor">
      <summary>
        <see cref="UnityEngine.Tilemaps.TileBase">
        </see> locks any color set by brushes or the user.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.TileFlags.LockTransform">
      <summary>
        <see cref="UnityEngine.Tilemaps.TileBase">
        </see> locks any transform matrix set by brushes or the user.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.TileFlags.InstantiateGameObjectRuntimeOnly">
      <summary>
        <see cref="UnityEngine.Tilemaps.TileBase">
        </see> does not instantiate its associated GameObject in editor mode and instantiates it only during play mode.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.TileFlags.LockAll">
      <summary>All lock flags.</summary>
    </member>
    <member name="M:UnityEngine.Tilemaps.TileBase.StartUp(UnityEngine.Vector3Int,UnityEngine.Tilemaps.ITilemap,UnityEngine.GameObject)">
      <summary>
        <para>StartUp is called on the first frame of the running scene.</para>
        <para>Use this to set values for the instantiated <see cref="UnityEngine.GameObject"></see> or run any logic at the beginning of the scene.</para>
      </summary>
      <param name="position">Position of the Tile on the <see cref="UnityEngine.Tilemaps.Tilemap"></see>.</param>
      <param name="tilemap">The <see cref="UnityEngine.Tilemaps.Tilemap"></see> the tile is present on.</param>
      <param name="go">The <see cref="UnityEngine.GameObject"></see> instantiated for the Tile.</param>
      <returns>Whether the call was successful.</returns>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileData.color">
      <summary>
        <see cref="UnityEngine.Color">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileData.flags">
      <summary>
        <see cref="UnityEngine.Tilemaps.TileFlags">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileData.gameObject">
      <summary>
        <see cref="UnityEngine.GameObject">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileData.sprite">
      <summary>
        <see cref="UnityEngine.Sprite">
        </see> to be rendered at the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileData.transform">
      <summary>
        <see cref="UnityEngine.Matrix4x4">
        </see> of the <see cref="UnityEngine.Tilemaps.Tile"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.animationFrameRate">
      <summary>
        <para>The frame rate for all tile animations in the tile map.</para>
        <para>The actual frame rate for each animation is dependent on this and the animation speed of the tile animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.cellBounds">
      <summary>Returns the boundaries of the <see cref="UnityEngine.Tilemaps.Tilemap"></see> in cell size.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.Tilemap.color">
      <summary>
        <para>The color of the tile map layer.</para>
        <para>The color of the tile map layer is multiplied with the color of the tiles in the layer to tint the tiles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tile.ColliderType.None">
      <summary>No collider shape is generated for the <see cref="UnityEngine.Tilemaps.Tile"></see> by the <see cref="UnityEngine.Tilemaps.TilemapCollider2D"></see>.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tile.ColliderType.Sprite">
      <summary>The Sprite outline is used as the collider shape for the <see cref="UnityEngine.Tilemaps.Tile"></see> by the <see cref="UnityEngine.Tilemaps.TilemapCollider2D"></see>.</summary>
    </member>
    <member name="F:UnityEngine.Tilemaps.Tile.ColliderType.Grid">
      <summary>The grid layout boundary outline is used as the collider shape for the <see cref="UnityEngine.Tilemaps.Tile"></see> by the <see cref="UnityEngine.Tilemaps.TilemapCollider2D"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileAnimationData.animatedSprites">
      <summary>The array of sprites that are ordered by appearance in the animation.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileAnimationData.animationSpeed">
      <summary>The animation speed.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TileAnimationData.animationStartTime">
      <summary>The start time of the animation. The animation will begin at this time offset.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TilemapRenderer.chunkSize">
      <summary>Size in number of tiles of each chunk created by the <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TilemapRenderer.maskInteraction">
      <summary>
        <para>Specifies how the <see cref="UnityEngine.Tilemaps.Tilemap"></see> interacts with the masks.</para>
        <para>Tilemaps by default do not interact with Masks and will be visible irrespective of any mask being present or not. Tilemaps can also be set up to be only visible under a mask by setting this value to VisibleUnderMask. The inverse can be achieved by seting the maskInteraction to VisibleOutsideMask.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TilemapRenderer.maxChunkCount">
      <summary>Maximum number of chunks the <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> caches in memory.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TilemapRenderer.maxFrameAge">
      <summary>Maximum number of frames the <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see> keeps unused chunks in memory.</summary>
    </member>
    <member name="P:UnityEngine.Tilemaps.TilemapRenderer.sortOrder">
      <summary>Active sort order for the <see cref="UnityEngine.Tilemaps.TilemapRenderer"></see>.</summary>
    </member>
    <member name="M:UnityEngine.GridBrushBase.Paint(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
      <summary>Paints data into a grid within the given bounds.</summary>
      <param name="brushTarget">Target of the paint operation. By default the currently selected GameObject.</param>
      <param name="position">The coordinates of the cell to paint data to.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.Pick(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.Vector3Int)">
      <summary>Picks data from a grid given the coordinates of the cells.</summary>
      <param name="brushTarget">Target of the paint operation. By default the currently selected GameObject.</param>
      <param name="position">The coordinates of the cells to paint data from.</param>
      <param name="pivot">Pivot of the picking brush.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.Select(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      <summary>Select an area of a grid.</summary>
      <param name="brushTarget">Targets of paint operation. By default the currently selected GameObject.</param>
      <param name="position">Area to get selected.</param>
    </member>
    <member name="F:UnityEngine.GridBrushBase.FlipAxis.X">
      <summary>Flip the brush in the X Axis.</summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.FlipAxis.Y">
      <summary>Flip the brush in the Y Axis.</summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.RotationDirection.Clockwise">
      <summary>Rotates tiles clockwise.</summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.RotationDirection.CounterClockwise">
      <summary>Rotates tiles counter-clockwise.</summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Select">
      <summary>
        <para>Select.</para>
        <para>Tool for selecting an area from a grid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Move">
      <summary>
        <para>Move.</para>
        <para>Tool for moving a selected area from a grid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Paint">
      <summary>
        <para>Paint.</para>
        <para>Tool for painting a single cell with the brush.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Box">
      <summary>
        <para>Box Fill.</para>
        <para>Tool for filling an area with the brush.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Pick">
      <summary>
        <para>Pick.</para>
        <para>Tool for picking an area from a grid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.Erase">
      <summary>
        <para>Erase.</para>
        <para>Tool for erasing a single cell with the brush.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GridBrushBase.Tool.FloodFill">
      <summary>
        <para>Flood Fill.</para>
        <para>Tool for flood filling logically connected cells with a brush.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GridBrushBase.BoxErase(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      <summary>Erases data on a grid within the given bounds.</summary>
      <param name="gridLayout">Grid used for layout.</param>
      <param name="brushTarget">Target of the erase operation. By default the currently selected GameObject.</param>
      <param name="position">The bounds to erase data from.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.BoxFill(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      <summary>Box fills tiles and GameObjects into given bounds within the selected layers.</summary>
      <param name="gridLayout">Grid used for layout.</param>
      <param name="brushTarget">Target of box fill operation. By default the currently selected GameObject.</param>
      <param name="position">The bounds to box fill data to.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.Erase(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
      <summary>Erases data on a grid within the given bounds.</summary>
      <param name="brushTarget">Target of the erase operation. By default the currently selected GameObject.</param>
      <param name="position">The coordinates of the cell to erase data from.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.FloodFill(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
      <summary>
        <para>Flood fills data onto a grid given the starting coordinates of the cell.</para>
        <para>Flood fill all the cells that are logically connected with the starting position.</para>
      </summary>
      <param name="gridLayout">Grid used for layout.</param>
      <param name="brushTarget">Targets of flood fill operation. By default the currently selected GameObject.</param>
      <param name="position">Starting position of the flood fill.</param>
    </member>
    <member name="M:UnityEngine.GridBrushBase.Move(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.BoundsInt)">
      <summary>Move is called when user moves the area previously selected with the selection marquee.</summary>
      <param name="brushTarget">Target of the move operation. By default the currently selected GameObject.</param>
      <param name="from">Source bounds of the move.</param>
      <param name="to">Target bounds of the move.</param>
      <seealso cref="M:UnityEngine.GridBrushBase.MoveStart(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.MoveEnd(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.Select(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
    </member>
    <member name="M:UnityEngine.GridBrushBase.MoveEnd(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      <summary>MoveEnd is called when user has ended the move of the area previously selected with the selection marquee.</summary>
      <param name="brushTarget">Target of the move operation. By default the currently selected GameObject.</param>
      <param name="position">Layers affected by the move operation.</param>
      <seealso cref="M:UnityEngine.GridBrushBase.MoveStart(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.Move(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.Select(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
    </member>
    <member name="M:UnityEngine.GridBrushBase.MoveStart(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      <summary>MoveEnd is called when user starts moving the area previously selected with the selection marquee.</summary>
      <param name="brushTarget">Target of the move operation. By default the currently selected GameObject.</param>
      <param name="position">Position where the move operation has started.</param>
      <seealso cref="M:UnityEngine.GridBrushBase.Move(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.MoveEnd(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
      <seealso cref="M:UnityEngine.GridBrushBase.Select(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
      </seealso>
    </member>
    <member name="P:UnityEngine.CustomGridBrushAttribute.defaultBrush">
      <summary>If set to true, brush will replace Unity built-in brush as the default brush in palette window. Only one class at any one time should set defaultBrush to true.</summary>
    </member>
    <member name="P:UnityEngine.CustomGridBrushAttribute.defaultName">
      <summary>
        <para>Name of the default instance of this brush.</para>
        <para>In addition to asset instances of brush class, Unity creates a default instance of every brush to be shown in the palette window dropdown. This is the display name of that instance. If the defaultName is not set, the type name will be used by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CustomGridBrushAttribute.hideAssetInstances">
      <summary>Hide all asset instances of this brush in the tile palette window.</summary>
    </member>
    <member name="P:UnityEngine.CustomGridBrushAttribute.hideDefaultInstance">
      <summary>
        <para>Hide the default instance of brush in the tile palette window.</para>
        <para>In addition to asset instances of brush class, Unity creates a default instance of every brush to be shown in the palette window dropdown. When hideDefaultInstance=true, the default instance will not be created.</para>
      </summary>
    </member>
  </members>
</doc>