<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.8.0.0 -->
  <assembly>
    <name>UnityEngine.VideoModule</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Video.VideoClip">
      <summary>
        <para>A container for video data.</para>
        <para>A VideoClip stores the video portion of a movie file using a codec that is appropriate for the target platform. VideoClips are referenced by <see cref="UnityEngine.Video.VideoPlayer"></see>s to play videos.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoPlayer">
      <summary>
        <para>Plays video content onto a target.</para>
        <para>Content can be either a <see cref="UnityEngine.Video.VideoClip"></see> imported asset or a URL such as <c>file://</c> or <c>http://</c>. Video content will be projected onto one of the supported targets, such as camera background or <see cref="UnityEngine.RenderTexture"></see>. If the video content includes transparency, this transparency will be present in the target, allowing objects behind the video target to be visible. Movie File Format Support Notes The VideoPlayer uses native audio and video decoding libraries in its implementation and it is your responsibility to use videos that match the requirements for the target platform. The <see cref="UnityEditor.VideoClipImporter"></see> offers an option to transcode the <see cref="UnityEngine.Video.VideoClip"></see> assets into one of <c>H.264</c> or <c>VP8</c> video codecs, along with a few options to experiment with, such as resolution. This uses the matching codec for audio tracks: <c>AAC</c> and <c>Vorbis</c> respectively. You may choose to omit this transcoding and instead use videos that you already know are supported by the target systems, keeping finer control over the encoding process using an external program. Over time, the <see cref="UnityEditor.VideoClipImporter"></see> editor will provide guidelines and warnings to better help making proper format and encoding choices. For now, vendor recommendations must be followed, and are especially constrained on older mobile platforms. For instance, videos you find on the web will often require inspection and manipulations before they can be used reliably in the context of a game running on multiple devices. The following are examples of recommendations and known limitations: *<c>Android</c>: <c>Supported Media Formats</c>. See additional notes below. *<c>Windows</c>: <c>H.264 Video Decoder</c> (see Format Constraints) *<c>iPhone 6-7</c>: <see cref="UnityEngine.UI.Dropdown.DropdownItem"></see> (see TV and Video) The best natively supported video codec for hardware acceleration is H.264, with VP8 being a software decoding solution that can be used when required. On Android, VP8 is also supported using native libraries and as such may also be hardware-assisted depending on models. Key values to look for in your encoding parameters: *<c>Video Codec</c>: H.264 or VP8. *<c>Resolution</c>: For example: 1280 x 720. *<c>Profile</c>: Applicable for H.264. The profile is a set of capabilities and constraints; vendors often specify this, such as "Baseline" or "Main". See <c>here</c>. *<c>Profile Level</c>: Applicable for H.264. Within a given profile, the level specifies certain performance requirements such as "Baseline 3.1". See <c>here</c>. *<c>Audio Codec</c>: Typically AAC (with mp4 videos using H.264) or Vorbis (with webm videos using VP8). *<c>Audio Channels</c>: depends on platform. For example, the Android recommendation is for stereo files, but many devices will accept 5.1. Android Notes * Support for resolutions above 640 x 360 is not available on all devices. Runtime checks are done to verify this and failures will cause the movie to not be played. * For OS 4.1/4.2, movies above 1280 x 720 or with more than 2 audio tracks will not be played due to bugs in the OS libraries. * For OS 5.0+, any resolution or number of audio channels may be attempted, but will be constrained by device capabilities. * The Vulkan graphics API is not yet supported. * Format compatibility issues are reported in the <c>adb logcat</c> output and are always prefixed with <c>AndroidVideoMedia</c>. * Also pay attention to device-specific error messages located near Unity's ones: they are not available to the engine, but often explains what the compatibility issue is. The following demonstrates a few features of the VideoPlayer:</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.Video3DLayout">
      <summary>Types of 3D content layout within a video.</summary>
    </member>
    <member name="T:UnityEngine.Video.VideoAspectRatio">
      <summary>Methods used to fit a video in the target area.</summary>
    </member>
    <member name="T:UnityEngine.Video.VideoAudioOutputMode">
      <summary>Places where the audio embedded in a video can be sent.</summary>
    </member>
    <member name="T:UnityEngine.Video.VideoRenderMode">
      <summary>Type of destination for the images read by a VideoPlayer.</summary>
    </member>
    <member name="T:UnityEngine.Video.VideoSource">
      <summary>
        <para>Source of the video content for a VideoPlayer.</para>
        <para>A VideoPlayer can contain valid references to both a <see cref="UnityEngine.Video.VideoClip"></see> and a URL at the same time. This enum expresses which of the two should be used for playback.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Video.VideoClipPlayable">
      <summary>
        <para>An implementation of <see cref="UnityEngine.Playables.IPlayable"></see> that controls playback of a <see cref="UnityEngine.Video.VideoClip"></see>.</para>
        <para>NOTE: You can use <see cref="UnityEngine.Playables.PlayableExtensions"></see> methods with VideoClipPlayable objects.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoTimeReference">
      <summary>The clock that the <see cref="UnityEngine.Video.VideoPlayer"></see> observes to detect and correct drift.</summary>
    </member>
    <member name="T:UnityEngine.Video.VideoTimeSource">
      <summary>Time source followed by the <see cref="UnityEngine.Video.VideoPlayer"></see> when reading content.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frameCount">
      <summary>
        <para>Number of frames in the current video content.</para>
        <para>Note that this value may be adjusted as the frameCount changes during playback.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frameRate">
      <summary>The frame rate of the clip or URL in frames/second. (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isLooping">
      <summary>
        <para>Determines whether the VideoPlayer restarts from the beginning when it reaches the end of the clip.</para>
        <para>If set to false, the VideoPlayer will stop playback at the end of the clip and will not reset the time to the start of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isPlaying">
      <summary>
        <para>Whether content is being played. (Read Only)</para>
        <para>Calling <see cref="UnityEngine.Video.VideoPlayer.Play"></see> will not necessarily result in isPlaying becoming true. The VideoPlayer must successfully prepare the content before it can start playing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isPrepared">
      <summary>
        <para>Whether the VideoPlayer has successfully prepared the content to be played. (Read Only)</para>
        <para>A prepared VideoPlayer can start playing back the associated content instantly, as opposed to the normal delay incurred by starting playback from scratch, which involves acquiring the playback resources and pre-loading some or all of the content. A VideoPlayer starts out as not prepared (false) and becomes prepared (true) once <see cref="UnityEngine.Video.VideoPlayer.Prepare"></see> has been invoked and the <see cref="UnityEngine.Video.VideoPlayer.prepareCompleted"></see> event has been emitted. The property goes back to false when <see cref="UnityEngine.Video.VideoPlayer.Stop"></see> is invoked. Preparation failures may lead to this property never becoming true. In this case an error description will be sent through the <see cref="UnityEngine.Video.VideoPlayer.errorReceived"></see> event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.playbackSpeed">
      <summary>
        <para>Factor by which the basic playback rate will be multiplied.</para>
        <para>Only works if <see cref="UnityEngine.Video.VideoPlayer.canSetPlaybackSpeed"></see> is true. Setting this to 2.0 will play the clip twice as fast as its normal speed. Support for negative values is platform dependent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.playOnAwake">
      <summary>Whether the content will start playing back as soon as the component awakes.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.renderMode">
      <summary>
        <para>Where the video content will be drawn.</para>
        <para>This gets automatically set to the most likely value when creating a VideoPlayer. For instance, adding a VideoPlayer on a Camera will result in the VideoPlayer initializing its target to be that Camera's background.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.sendFrameReadyEvents">
      <summary>
        <para>Enables the frameReady events.</para>
        <para>If set to true, any delegates registered with <see cref="UnityEngine.Video.VideoPlayer.frameReady"></see> will be invoked when a frame is ready to be drawn. If set to false, the registered delegates will not be invoked.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.skipOnDrop">
      <summary>
        <para>Whether the VideoPlayer is allowed to skip frames to catch up with current time.</para>
        <para>Only settable if canSetSkipOnDrop is true.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.source">
      <summary>
        <para>The source that the VideoPlayer uses for playback.</para>
        <para>It is valid to set both a VideoClip and a URL in the VideoPlayer. This property controls which one will get used for playback. When setting a new clip or URL, the source will automatically change to make the associated type current.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetCamera">
      <summary>Camera component to draw to when <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set to either Video.VideoTarget.CameraFarPlane or Video.VideoTarget.CameraNearPlane.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetCamera3DLayout">
      <summary>
        <para>Type of 3D content contained in the source video media.</para>
        <para>When <see cref="UnityEditor.PlayerSettings.virtualRealitySupported"></see> is enabled, rendering for each eye will sample the correct half of the video according to this setting. Only used when <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set to either Video.VideoTarget.CameraBackPlane or Video.VideoTarget.CameraFrontPlane.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetCameraAlpha">
      <summary>
        <para>Overall transparency level of the target camera plane video.</para>
        <para>This level, in range [0.0, 1.0], is applied in addition of the transparency that may be embedded in the video frames.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetMaterialProperty">
      <summary>
        <para>Material texture property which is targeted when <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set to Video.VideoTarget.MaterialOverride.</para>
        <para>The video is sent to every Material in the Renderer that has the targeted texture property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetMaterialRenderer">
      <summary>
        <para>
          <see cref="UnityEngine.Renderer">
          </see> which is targeted when <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set to Video.VideoTarget.MaterialOverride</para>
        <para>Setting this to null causes the VideoPlayer to use the current GameObject's first Renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetTexture">
      <summary>
        <para>
          <see cref="UnityEngine.RenderTexture">
          </see> to draw to when <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set to Video.VideoTarget.RenderTexture.</para>
        <para>If the <see cref="UnityEngine.RenderTexture"></see> is of <see cref="UnityEngine.Rendering.TextureDimension.Tex2D"></see> the video frames will be drawn directly into this target. For optimal performance, <see cref="UnityEngine.RenderTexture.width"></see> and <see cref="UnityEngine.RenderTexture.height"></see> should match those of the video media exactly. If the <see cref="UnityEngine.RenderTexture"></see> is of <see cref="UnityEngine.Rendering.TextureDimension.Cube"></see> the video frames will be interpreted as a cubemap in one of the 4 supported layouts (horizontal or vertical orientation of a cross or strip layout) based on video aspect ratio. The video frame's cubemap faces will be drawn to the 6 faces of the <see cref="UnityEngine.RenderTexture"></see>. For a one-to-one pixel mapping, <see cref="UnityEngine.RenderTexture.width"></see> and <see cref="UnityEngine.RenderTexture.height"></see> should match the size of the individual faces contained within the video media's cubemap (eg. for a 2048x1536 horizontal cross cubemap video, the <see cref="UnityEngine.RenderTexture"></see> cube size should be set to 512x512).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.texture">
      <summary>
        <para>Internal texture in which video content is placed.</para>
        <para>The texture is used to send the video content to the desired target. When the <see cref="UnityEngine.Video.VideoPlayer.renderMode"></see> is set [[Video.VideoTarget.APIOnly], the content is still accessible from scripts using this property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.time">
      <summary>The VideoPlayer current time in seconds.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.timeReference">
      <summary>The clock that the <see cref="UnityEngine.Video.VideoPlayer"></see> observes to detect and correct drift.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.timeSource">
      <summary>[NOT YET IMPLEMENTED] The source used used by the VideoPlayer to derive its current time.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.url">
      <summary>
        <para>The file or HTTP URL that the VideoPlayer will read content from.</para>
        <para>If both a clip and a URL are set, the last one set will take precedence. File URLs are filesystem paths that are either absolute on the platform or relative to the Player root.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.waitForFirstFrame">
      <summary>
        <para>Determines whether the VideoPlayer will wait for the first frame to be loaded into the texture before starting playback when <see cref="UnityEngine.Video.VideoPlayer.playOnAwake"></see> is on.</para>
        <para>In this mode, drawing into the target will only start once the VideoPlayer preparation is done and the first frame is available in texture memory. Otherwise, the playback will start immediately even if frames are not ready, leading to the first few frames being possibly skipped. Note Depending on how long the preparation takes and the underlying platform capabilities, catching up with current time after preparation completes may result in many consecutive skips.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.EnableAudioTrack(System.UInt16,System.Boolean)">
      <summary>
        <para>Enable/disable audio track decoding. Only effective when the VideoPlayer is not currently playing.</para>
        <para>Disabling audio tracks helps save processing resources by disabling audio decoding completely. This is different to muting a track during playback, which turns the audio track volume to 0 but still decodes the audio samples.</para>
      </summary>
      <param name="trackIndex">Index of the audio track to enable/disable.</param>
      <param name="enabled">True for enabling the track. False for disabling the track.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetAudioChannelCount(System.UInt16)">
      <summary>The number of audio channels in the specified audio track.</summary>
      <param name="trackIndex">Index for the audio track being queried.</param>
      <returns>Number of audio channels.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetAudioLanguageCode(System.UInt16)">
      <summary>Returns the language code, if any, for the specified track.</summary>
      <param name="trackIndex">Index of the audio track to query.</param>
      <returns>Language code.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetDirectAudioMute(System.UInt16)">
      <summary>Get the direct-output audio mute status for the specified track.</summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetDirectAudioVolume(System.UInt16)">
      <summary>Return the direct-output volume for specified track.</summary>
      <param name="trackIndex">Track index for which the volume is queried.</param>
      <returns>Volume, between 0 and 1.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetTargetAudioSource(System.UInt16)">
      <summary>Gets the <see cref="UnityEngine.AudioSource"></see> that will receive audio samples for the specified track if <see cref="UnityEngine.Video.VideoPlayer.audioOutputMode"></see> is set to <see cref="UnityEngine.Video.VideoAudioOutputMode.AudioSource"></see>.</summary>
      <param name="trackIndex">Index of the audio track for which the <see cref="UnityEngine.AudioSource"></see> is wanted.</param>
      <returns>The source associated with the audio track.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.IsAudioTrackEnabled(System.UInt16)">
      <summary>Returns whether decoding for the specified audio track is enabled. See <see cref="UnityEngine.Video.VideoPlayer.EnableAudioTrack"></see> for distinction with mute.</summary>
      <param name="trackIndex">Index of the audio track being queried.</param>
      <returns>True if decoding for the specified audio track is enabled.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Pause">
      <summary>Pauses the playback and leaves the current time intact.</summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Play">
      <summary>
        <para>Starts playback.</para>
        <para>Initiates the preparation if not already done, in which case the playback will not start instantly.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Prepare">
      <summary>
        <para>Initiates playback engine prepration.</para>
        <para>The preparation consists of reserving the resources needed for playback, and preloading some or all of the content to be played. After this is done, frames can be received immediately.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetDirectAudioMute(System.UInt16,System.Boolean)">
      <summary>Set the direct-output audio mute status for the specified track.</summary>
      <param name="trackIndex">Track index for which the mute is set.</param>
      <param name="mute">Mute on/off.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetDirectAudioVolume(System.UInt16,System.Single)">
      <summary>Set the direct-output audio volume for the specified track.</summary>
      <param name="trackIndex">Track index for which the volume is set.</param>
      <param name="volume">New volume, between 0 and 1.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetTargetAudioSource(System.UInt16,UnityEngine.AudioSource)">
      <summary>Sets the <see cref="UnityEngine.AudioSource"></see> that will receive audio samples for the specified track if this audio target is selected with <see cref="UnityEngine.Video.VideoPlayer.audioOutputMode"></see>.</summary>
      <param name="trackIndex">Index of the audio track to associate with the specified <see cref="UnityEngine.AudioSource"></see>.</param>
      <param name="source">
        <see cref="UnityEngine.AudioSource">
        </see> to associate with the audio track.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.StepForward">
      <summary>Advances the current time by one frame immediately.</summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Stop">
      <summary>Pauses the playback and sets the current time to 0.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.controlledAudioTrackMaxCount">
      <summary>
        <para>Maximum number of audio tracks that can be controlled.</para>
        <para>When playing audio from a URL, the number of audio tracks is not known in advance. It is up to the user to specify the number of controlled audio tracks through <see cref="UnityEngine.Video.VideoPlayer.controlledAudioTrackCount"></see>. Other tracks will be ignored and silenced. In this scenario, <see cref="UnityEngine.Video.VideoPlayer.audioTrackCount"></see> will be set to the actual number of tracks during playback, after prepration is complete. See <see cref="UnityEngine.Video.VideoPlayer.Prepare"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.aspectRatio">
      <summary>Defines how the video content will be stretched to fill the target area.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.audioOutputMode">
      <summary>Destination for the audio embedded in the video.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.audioTrackCount">
      <summary>
        <para>Number of audio tracks found in the data source currently configured.</para>
        <para>For URL sources, this will only be set once the source preparation is completed. See <see cref="UnityEngine.Video.VideoPlayer.Prepare"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetDirectAudioVolume">
      <summary>Whether direct-output volume controls are supported for the current platform and video format. (Read Only)</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetPlaybackSpeed">
      <summary>Whether the playback speed can be changed. (Read Only)</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetSkipOnDrop">
      <summary>
        <para>Determines whether the VideoPlayer skips frames to catch up with current time. (Read Only)</para>
        <para>Set to true to enable the VideoPlayer to skip frames to catch up with the current play time if it is currently behind for some reason. Set to false to ensure all frames are played without skipping.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetTime">
      <summary>
        <para>Whether current time can be changed using the time or timeFrames property. (Read Only)</para>
        <para>Seeking is not supported in all contexts. For example seeking in a HTTP live stream may not make sense.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetTimeSource">
      <summary>
        <para>Whether the time source followed by the VideoPlayer can be changed. (Read Only)</para>
        <para>Certain playback engines can only follow their own internal clock.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canStep">
      <summary>
        <para>Returns true if the VideoPlayer can step forward through the video content. (Read Only)</para>
        <para>Stepping is done with Video.VideoPlayer.StepForwards.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.clip">
      <summary>
        <para>The clip being played by the VideoPlayer.</para>
        <para>The VideoPlayer may reference both a clip and a URL at the same time. The latest one that was set takes precedence.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.controlledAudioTrackCount">
      <summary>Number of audio tracks that this VideoPlayer will take control of. The other ones will be silenced. A maximum of 64 tracks are allowed. The actual number of audio tracks cannot be known in advance when playing URLs, which is why this value is independent of the <see cref="UnityEngine.Video.VideoPlayer.audioTrackCount"></see> property.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.externalReferenceTime">
      <summary>
        <para>Reference time of the external clock the <see cref="UnityEngine.Video.VideoPlayer"></see> uses to correct its drift.</para>
        <para>Only relevant when <see cref="UnityEngine.Video.VideoPlayer.timeReference"></see> is set to <see cref="UnityEngine.Video.VideoTimeReference.ExternalTime"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frame">
      <summary>
        <para>The frame index currently being displayed by the VideoPlayer.</para>
        <para>This will be 0 for the first frame of the clip, 1 for the second and so on.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.CameraFarPlane">
      <summary>
        <para>Draw video content behind a camera's scene.</para>
        <para>Any transparency in the video will reveal the scene's actual background or skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.CameraNearPlane">
      <summary>
        <para>Draw video content in front of a camera's scene.</para>
        <para>Any transparency in the video will reveal the scene.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.RenderTexture">
      <summary>Draw video content into a RenderTexture.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.MaterialOverride">
      <summary>Draw the video content into a user-specified property of the current GameObject's material.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.APIOnly">
      <summary>Don't draw the video content anywhere, but still make it available via the VideoPlayer's texture property in the API.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.audioTrackCount">
      <summary>Number of audio tracks in the clip.</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.frameCount">
      <summary>
        <para>The length of the VideoClip in frames. (Read Only).</para>
        <para>Note that the length returned can be inaccurate as the external encoder can be imprecise. Use <see cref="UnityEngine.Video.VideoPlayer.frameCount"></see> to get an adjusted value that is more accurate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.frameRate">
      <summary>The frame rate of the clip in frames/second. (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.height">
      <summary>The height of the images in the video clip in pixels. (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.length">
      <summary>
        <para>The length of the video clip in seconds. (Read Only).</para>
        <para>Note that the length returned can be inaccurate as the external encoder can be imprecise. Use <see cref="UnityEngine.Video.VideoPlayer.frameCount"></see> and <see cref="UnityEngine.Video.VideoPlayer.frameRate"></see> to get adjusted values that are more accurate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.originalPath">
      <summary>The video clip path in the project's assets. (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.pixelAspectRatioDenominator">
      <summary>Denominator of the pixel aspect ratio (num:den). (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.pixelAspectRatioNumerator">
      <summary>Numerator of the pixel aspect ratio (num:den). (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.width">
      <summary>The width of the images in the video clip in pixels. (Read Only).</summary>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioChannelCount(System.UInt16)">
      <summary>The number of channels in the audio track. E.g. 2 for a stereo track.</summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>The number of channels.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioLanguage(System.UInt16)">
      <summary>Get the audio track language. Can be unknown.</summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>The abbreviated name of the language.</returns>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioSampleRate(System.UInt16)">
      <summary>Get the audio track sampling rate in Hertz.</summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>The sampling rate in Hertz.</returns>
    </member>
    <member name="F:UnityEngine.Video.VideoSource.VideoClip">
      <summary>Use the current clip as the video content source.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoSource.Url">
      <summary>Use the current URL as the video content source.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.Video.VideoClipPlayable.Create(UnityEngine.Playables.PlayableGraph,UnityEngine.Video.VideoClip,System.Boolean)">
      <summary>Creates a <see cref="UnityEngine.Experimental.Video.VideoClipPlayable"></see> in the <see cref="UnityEngine.Playables.PlayableGraph"></see>.</summary>
      <param name="graph">The <see cref="UnityEngine.Playables.PlayableGraph"></see> object that will own the <see cref="UnityEngine.Experimental.Video.VideoClipPlayable"></see>.</param>
      <param name="clip">
        <see cref="UnityEngine.Video.VideoClip">
        </see> used to produce textures in the <see cref="UnityEngine.Playables.PlayableGraph"></see>.</param>
      <param name="looping">Indicates if <see cref="UnityEngine.Video.VideoClip"></see> loops when it reaches the end.</param>
      <returns>A <see cref="UnityEngine.Experimental.Video.VideoClipPlayable"></see> linked to the <see cref="UnityEngine.Playables.PlayableGraph"></see>.</returns>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeReference.Freerun">
      <summary>
        <para>Disables the drift detection.</para>
        <para>
          <see cref="UnityEngine.Video.VideoPlayer">
          </see> will use a reasonable free running time source and will never correct for drift.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeReference.InternalTime">
      <summary>
        <para>Internal reference clock the <see cref="UnityEngine.Video.VideoPlayer"></see> observes to detect and correct drift.</para>
        <para>Clock time is provided by game time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeReference.ExternalTime">
      <summary>
        <para>External reference clock the <see cref="UnityEngine.Video.VideoPlayer"></see> observes to detect and correct drift.</para>
        <para>Clock time set through <see cref="UnityEngine.Video.VideoPlayer.externalReferenceTime"></see>.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeSource.AudioDSPTimeSource">
      <summary>The audio hardware clock.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeSource.GameTimeSource">
      <summary>The unscaled game time as defined by Time.realtimeSinceStartup.</summary>
    </member>
    <member name="F:UnityEngine.Video.Video3DLayout.No3D">
      <summary>Video does not have any 3D content.</summary>
    </member>
    <member name="F:UnityEngine.Video.Video3DLayout.SideBySide3D">
      <summary>Video contains 3D content where the left eye occupies the left half and right eye occupies the right half of video frames.</summary>
    </member>
    <member name="F:UnityEngine.Video.Video3DLayout.OverUnder3D">
      <summary>Video contains 3D content where the left eye occupies the upper half and right eye occupies the lower half of video frames.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.NoScaling">
      <summary>Preserve the pixel size without adjusting for target area.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitVertically">
      <summary>Resize proportionally so that height fits the target area, cropping or adding black bars on each side if needed.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitHorizontally">
      <summary>Resize proportionally so that width fits the target area, cropping or adding black bars above and below if needed.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitInside">
      <summary>Resize proportionally so that content fits the target area, adding black bars if needed.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitOutside">
      <summary>Resize proportionally so that content fits the target area, cropping if needed.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.Stretch">
      <summary>Resize non-proportionally to fit the target area.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.None">
      <summary>Disable the embedded audio.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.AudioSource">
      <summary>Send the embedded audio into a specified <see cref="UnityEngine.AudioSource"></see>.</summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.Direct">
      <summary>Send the embedded audio direct to the platform's audio hardware.</summary>
    </member>
  </members>
</doc>