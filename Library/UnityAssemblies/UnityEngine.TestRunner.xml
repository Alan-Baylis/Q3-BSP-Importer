<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.8.0.0 -->
  <assembly>
    <name>UnityEngine.TestRunner</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.TestTools.LogAssert">
      <summary>LogAssert allows you to expect Unity log messages that would normally cause the test to fail.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.IMonoBehaviourTest">
      <summary>A MonoBehaviour test needs to implement this interface.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.IPostBuildCleanup">
      <summary>Interface for the method that implements the postbuild step.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.IPrebuildSetup">
      <summary>Interface for the method that implements the prebuild step.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.TestPlatform">
      <summary>Platforms the tests can run on.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.PostBuildCleanupAttribute">
      <summary>Allows you to define a cleanup method for the test that is invoked after all tests are run.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.PrebuildSetupAttribute">
      <summary>Allows to define a setup method for the test that will be invoked before the test run is started.</summary>
    </member>
    <member name="T:UnityEngine.TestTools.UnityPlatformAttribute">
      <summary>
        <para>For specifying platforms to run on.</para>
        <para>Implement this class to specify which platforms should be tested. Use the <see cref="UnityEngine.RuntimePlatform"></see> enumeration to specify the platforms, along with the <c>include</c> or <c>exclude</c> properties of lists to set whether a test should apply to the platforms. You can also specify which platforms should be tested by passing one or more RuntimePlatform values as parameters to the PlatformAttribute constructor. All platforms are tested if nothing is specified using <c>RuntimePlatform</c>, <c>include</c> or <c>exclude</c>. No tests are excluded if the <c>include</c> property is not null.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TestTools.UnityTestAttribute">
      <summary>Special type of a unit test that allows to yield from test in order to skip frames when the test is running.</summary>
    </member>
    <member name="P:UnityEngine.TestTools.LogAssert.ignoreFailingMessages">
      <summary>Set this property to true to prevent unexpected error log messages from triggering an assertion. This property is set to false by default.</summary>
    </member>
    <member name="M:UnityEngine.TestTools.LogAssert.Expect(UnityEngine.LogType,System.String)">
      <summary>Expect a log message of a specfic type. If an error, assertion or exception log is expected, the test will not fail. The test will fail if a log message is expected but does not appear.</summary>
      <param name="type">Log type.</param>
      <param name="message">Log message to expect.</param>
    </member>
    <member name="P:UnityEngine.TestTools.UnityPlatformAttribute.exclude">
      <summary>
        <para>Excluded platforms.</para>
        <para>Sets the list of tests to skip on platforms specified using the <see cref="UnityEngine.RuntimePlatform"></see> enumeration. No tests are excluded if the <c>include</c> property is not null.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TestTools.UnityPlatformAttribute.include">
      <summary>
        <para>Included platforms.</para>
        <para>Sets the list of tests to run on platforms specified using the <see cref="UnityEngine.RuntimePlatform"></see> enumeration. No tests are excluded if the <c>include</c> property is not null.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TestTools.IMonoBehaviourTest.IsTestFinished">
      <summary>Indicates when the test is considered finished.</summary>
    </member>
    <member name="M:UnityEngine.TestTools.IPostBuildCleanup.Cleanup">
      <summary>Cleanup method that is automatically called after all the test have run.</summary>
    </member>
    <member name="M:UnityEngine.TestTools.IPrebuildSetup.Setup">
      <summary>Setup method that is automatically called before the test run.</summary>
    </member>
    <member name="M:UnityEngine.TestTools.LogAssert.NoUnexpectedReceived">
      <summary>Triggers an assert if any logs have been received that were not expected. Returns without asserting if all logs received so far have been registered as expected.</summary>
    </member>
  </members>
</doc>