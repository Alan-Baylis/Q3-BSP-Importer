<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.8.0.0 -->
  <assembly>
    <name>UnityEngine.UIElementsModule</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Experimental.UIElements.IScheduledItem">
      <summary>A reference to a scheduled action.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IScheduler">
      <summary>A scheduler allows you to register actions to be executed at a later point.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IStyle">
      <summary>
        <para>This interface provides access to a VisualElement style data.</para>
        <para>Reading properties from this object will read from the shared copy of style data, if multiple elements match the same USS rules. When writing to any of the properties the target element will start owning its own style data and stop using the shared copy. Writing to a property will mask the value coming from USS with the provided value however other properties will still match the values from USS.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.ITransform">
      <summary>
        <para>This interface provides access to a VisualElement transform data.</para>
        <para>Reading properties of this object gives information about the tranform of its VisualElement. It is possible to write the position, scale and rotation of the transform.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IUIElementDataWatch">
      <summary>Interface allowing access to this elements datawatch.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IUIElementDataWatchRequest">
      <summary>An internal reference to a data watch request.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IUxmlAttributes">
      <summary>This type allows UXML attribute value retrieval during the VisualElement instantiation. An instance will be provided to the factory method - see UXMLFactoryAttribute.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem">
      <summary>Represents a scheduled task created with a VisualElement's schedule interface.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IVisualElementScheduler">
      <summary>A scheduler allows you to register actions to be executed at a later point.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.Capture">
      <summary>Used to specify the phases where an event handler should be executed.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.ChangeType">
      <summary>Enum which describes the various types of changes that can occur on a <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see>.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.PropagationPhase">
      <summary>
        <para>The propagation phases of an event.</para>
        <para>When an element receives an event, it is usually propagated along a path starting at the panel root element down to the target element. The event is first sent from the root element to the target parent element; this is the Capture phase. Next, it is sent to the target element; this is the AtTarget phase. Then comes the BubbleUp phase, where the event is sent from the target parent element up to the root element. Finally, the event is resent to the target element in the DefaultAction phase.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.AttachToPanelEvent">
      <summary>Event sent after an element is added to an element that is a descendent of a panel.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.BlurEvent">
      <summary>Event sent immediately after an element has lost focus. Capturable, does not bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.CallbackEventHandler">
      <summary>Interface for classes capable of having callbacks to handle events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.CreationContext">
      <summary>This class is used during UXML template instantiation.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.DetachFromPanelEvent">
      <summary>Event sent just before an element is detach from its parent, if the parent is the descendant of a panel.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.EventBase">
      <summary>The base class for all UIElements events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.EventBase.EventFlags">
      <summary>Flags to describe the characteristics of an event.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.Focusable">
      <summary>
        <para>Base class for objects that can get the focus.</para>
        <para>The focus is used to designate an element that will receive keyboard events.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.FocusChangeDirection">
      <summary>
        <para>Base class for defining in which direction the focus moves in a focus ring.</para>
        <para>Focus ring implementations can move the focus in various direction; they can derive from this class to formalize the various ways the focus can change from one element to the other.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.FocusController">
      <summary>
        <para>Class in charge of managing the focus inside a Panel.</para>
        <para>Each Panel should have an instance of this class. The instance holds the currently focused element and is responsible for changing it.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.FocusEvent">
      <summary>Event sent immediately after an element has gained focus. Capturable, does not bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.FocusInEvent">
      <summary>Event sent immediately before an element gains focus. Capturable, bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.FocusOutEvent">
      <summary>Event sent immediately before an element loses focus. Capturable, bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IMGUIEvent">
      <summary>Class used to dispatch IMGUI event types that have no equivalent in UIElements events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.KeyDownEvent">
      <summary>Event sent when a key is pressed on the keyboard. Capturable, bubbles, cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.KeyUpEvent">
      <summary>Event sent when a key is released on the keyboard. Capturable, bubbles, cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseDownEvent">
      <summary>Mouse down event.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseEnterEvent">
      <summary>Event sent when the mouse pointer enters an element or one of its descendent elements. Capturable, does not bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseLeaveEvent">
      <summary>Event sent when the mouse pointer exits an element and all its descendent elements. Capturable, does not bubbles, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseMoveEvent">
      <summary>Mouse move event.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseOutEvent">
      <summary>Event sent when the mouse pointer exits an element. Capturable, bubbles, cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseOverEvent">
      <summary>Event sent when the mouse pointer enters an element. Capturable, bubbles, cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.MouseUpEvent">
      <summary>Mouse up event.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.PostLayoutEvent">
      <summary>Event sent after the layout is done in a tree. Non-capturable, does not bubble, non-cancellable.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.TextField">
      <summary>A textfield is a rectangular area where the user can edit a string.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.UQuery">
      <summary>UQuery is a set of extension methods allowing you to select individual or collection of visualElements inside a complex hierarchy.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.UQueryExtensions">
      <summary>UQuery is a set of extension methods allowing you to select individual or collection of visualElements inside a complex hierarchy.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElement">
      <summary>
        <para>Base class for objects that are part of the UIElements visual tree.</para>
        <para>VisualElement contains several features that are common to all controls in UIElements, such as layout, styling and event handling. Several other classes derive from it to implement custom rendering and define behaviour for controls.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy">
      <summary>Hierarchy is a sctuct allowing access to the shadow hierarchy of visual elements</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElement.ClippingOptions">
      <summary>Options to select clipping strategy.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElement.MeasureMode">
      <summary>The modes available to measure <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> sizes.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElementExtensions">
      <summary>VisualElementExtensions is a set of extension methods useful for VisualElement.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElementFocusChangeDirection">
      <summary>Define focus change directions for the VisualElementFocusRing.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElementFocusRing">
      <summary>Implementation of a linear focus ring. Elements are sorted according to their focusIndex.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.VisualElementFocusRing.DefaultFocusOrder">
      <summary>Ordering of elements in the focus ring.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.WheelEvent">
      <summary>Mouse wheel event.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IEventDispatcher">
      <summary>Interface for event dispatchers.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IEventHandler">
      <summary>Interface for class capable of handling events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IFocusEvent">
      <summary>Interface for focus events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IFocusRing">
      <summary>Interface for classes implementing focus rings.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IKeyboardEvent">
      <summary>Interface for keyboard events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IMouseEvent">
      <summary>Interface for mouse events.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.IPanel">
      <summary>Interface for classes implementing UI panels.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleEnums.Align">
      <summary>
        <para>This enumeration contains values to control how an element is aligned in its parent during the layout phase.</para>
        <para>The cross axis of a container is perpendicular to the primary axis on which children are laid out, that is, its flex direction.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleEnums.FlexDirection">
      <summary>This enumeration defines values used to control in which direction a container will place its children during layout.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleEnums.Justify">
      <summary>
        <para>This enumeration contains values to control how children are justified during layout.</para>
        <para>The main axis of a container is the primary axis on which children are laid out, that is, its flex direction.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleEnums.PositionType">
      <summary>This enumeration contains values to control how an element is positioned in its parent container.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleEnums.Wrap">
      <summary>This enumeration contains values to control how elements are placed in a container if not enough space is available.</summary>
    </member>
    <member name="T:UnityEngine.Experimental.UIElements.StyleSheets.ICustomStyle">
      <summary>This interface exposes methods to read custom style properties applied from USS files to visual elements.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.element">
      <summary>Returns the VisualElement this object is associated with.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.isActive">
      <summary>Will be true when this item is scheduled. Note that an item's callback will only be executed when it's VisualElement is attached to a panel.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.Every(System.Int64)">
      <summary>Repeats this action after a specified time.</summary>
      <param name="intervalMs">Minimum amount of time in milliseconds between each action execution.</param>
      <returns>This ScheduledItem.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.ExecuteLater(System.Int64)">
      <summary>Cancels any previously scheduled execution of this item and re-schedules the item.</summary>
      <param name="delayMs">Minimum time in milliseconds before this item will be executed.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.ForDuration(System.Int64)">
      <summary>After specified duration, the item will be automatically unscheduled.</summary>
      <param name="durationMs">The total duration in milliseconds where this item will be active.</param>
      <returns>This ScheduledItem.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.Pause">
      <summary>Removes this item from its VisualElement's scheduler.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IVisualElementScheduledItem.Resume">
      <summary>If not already active, will schedule this item on its VisualElement's scheduler.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.marginTop">
      <summary>Space reserved for the top edge of the margin during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.maxHeight">
      <summary>Maximum height for an element, when it is flexible or measures its own size.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.maxWidth">
      <summary>Maximum width for an element, when it is flexible or measures its own size.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.minHeight">
      <summary>Minimum height for an element, when it is flexible or measures its own size.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.minWidth">
      <summary>Minimum height for an element, when it is flexible or measures its own size.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.paddingBottom">
      <summary>Space reserved for the bottom edge of the padding during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.paddingLeft">
      <summary>Space reserved for the left edge of the padding during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.paddingRight">
      <summary>Space reserved for the right edge of the padding during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.paddingTop">
      <summary>Space reserved for the top edge of the padding during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.positionBottom">
      <summary>
        <para>Bottom distance from the element's box during layout.</para>
        <para>Also see positionType property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.positionLeft">
      <summary>
        <para>Left distance from the element's box during layout.</para>
        <para>Also see positionType property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.positionRight">
      <summary>
        <para>Right distance from the element's box during layout.</para>
        <para>Also see positionType property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.positionTop">
      <summary>
        <para>Top distance from the element's box during layout.</para>
        <para>Also see positionType property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.positionType">
      <summary>
        <para>Element's positioning in its parent container.</para>
        <para>This property is used in conjunction with position left, top, right and bottom properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.sliceBottom">
      <summary>Size of the 9-slice's bottom edge when painting an element's background image.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.sliceLeft">
      <summary>Size of the 9-slice's left edge when painting an element's background image.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.sliceRight">
      <summary>Size of the 9-slice's right edge when painting an element's background image.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.sliceTop">
      <summary>Size of the 9-slice's top edge when painting an element's background image.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.textAlignment">
      <summary>Text alignment in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.textClipping">
      <summary>Clipping if the text does not fit in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.textColor">
      <summary>Color to use when drawing the text of an element.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.width">
      <summary>Fixed width of an element for the layout.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.wordWrap">
      <summary>Word wrapping over multiple lines if not enough space is available to draw the text of an element.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.ITransform.matrix">
      <summary>Transformation matrix calculated from the position, rotation and scale of the transform (Read Only).</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.ITransform.position">
      <summary>The position of the VisualElement's transform.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.ITransform.rotation">
      <summary>The rotation of the VisualElement's transform stored as a Quaternion.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.ITransform.scale">
      <summary>The scale of the VisualElement's transform.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IUIElementDataWatch.UnregisterWatch(UnityEngine.Experimental.UIElements.IUIElementDataWatchRequest)">
      <summary>Unregisters a previously watched request.</summary>
      <param name="requested">The registered request.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IScheduler.Schedule(UnityEngine.Experimental.UIElements.IScheduledItem)">
      <summary>Add this item to the list of scheduled tasks.</summary>
      <param name="item">The item to register.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IScheduler.Unschedule(UnityEngine.Experimental.UIElements.IScheduledItem)">
      <summary>Manually unschedules a previously scheduled action.</summary>
      <param name="item">The item to be removed from this scheduler.</param>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.alignContent">
      <summary>Alignment of the whole area of children on the cross axis if they span over multiple lines in this container.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.alignItems">
      <summary>Alignment of children on the cross axis of this container.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.alignSelf">
      <summary>Similar to align-items, but only for this specific element.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.backgroundColor">
      <summary>Background color to paint in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.backgroundImage">
      <summary>Background image to paint in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.backgroundSize">
      <summary>Background image scaling in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderBottom">
      <summary>Space reserved for the bottom edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderBottomLeftRadius">
      <summary>This is the radius of the bottom-left corner when a rounded rectangle is drawn in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderBottomRightRadius">
      <summary>This is the radius of the bottom-right corner when a rounded rectangle is drawn in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderBottomWidth">
      <summary>Space reserved for the bottom edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderColor">
      <summary>Color of the border to paint inside the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderLeft">
      <summary>Space reserved for the left edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderLeftWidth">
      <summary>Space reserved for the left edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderRadius">
      <summary>
        <para>This is the radius of every corner when a rounded rectangle is drawn in the element's box.</para>
        <para>Use borderRadius to specify the same value for corners or use the other specific corner radius properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderRight">
      <summary>Space reserved for the right edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderRightWidth">
      <summary>Space reserved for the right edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderTop">
      <summary>Space reserved for the top edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderTopLeftRadius">
      <summary>This is the radius of the top-left corner when a rounded rectangle is drawn in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderTopRightRadius">
      <summary>This is the radius of the top-right corner when a rounded rectangle is drawn in the element's box.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.borderTopWidth">
      <summary>Space reserved for the top edge of the border during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.flex">
      <summary>
        <para>Ration of this element in its parent during the layout phase.</para>
        <para>For example, if a first element in a container has a flex value of 2 and a second element has flex value of 1, the space will be distributed so that they respectively use two thirds and one third of the available space. The available space is the size of the parent minus measured and fixed size elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.flexDirection">
      <summary>Direction of the main axis to layout children in a container.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.flexWrap">
      <summary>Placement of children over multiple lines if not enough space is available in this container.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.font">
      <summary>Font to draw the element's text.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.fontSize">
      <summary>Font size to draw the element's text.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.fontStyle">
      <summary>Font style to draw the element's text.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.height">
      <summary>Fixed height of an element for the layout.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.justifyContent">
      <summary>Justification of children on the main axis of this container.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.marginBottom">
      <summary>Space reserved for the bottom edge of the margin during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.marginLeft">
      <summary>Space reserved for the left edge of the margin during the layout phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IStyle.marginRight">
      <summary>Space reserved for the right edge of the margin during the layout phase.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.ChangeType.PersistentDataPath">
      <summary>Persistence key or parent has changed on some child of the current <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see>.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.ChangeType.All">
      <summary>All change types have been flagged.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.PropagationPhase.None">
      <summary>The event is not being propagated.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.PropagationPhase.Capture">
      <summary>The event is being sent to the root element down to the event target parent element.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.PropagationPhase.AtTarget">
      <summary>The event is being sent to the event target.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.PropagationPhase.BubbleUp">
      <summary>The event is being sent to the event target parent element up to the root element.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.PropagationPhase.DefaultAction">
      <summary>The event is being sent to the target element for it to execute its default actions for this event. Event handlers do not get the events in this phase. Instead, ExecuteDefaultAction is called on the target.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.Capture.NoCapture">
      <summary>The event handler should be executed during the target and bubble up phases.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.Capture.Capture">
      <summary>The event handler should be executed during the capture and the target phases.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.ChangeType.PersistentData">
      <summary>Persistence key or parent has changed on the current <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see>.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.CallbackEventHandler.HandleEvent(UnityEngine.Experimental.UIElements.EventBase)">
      <summary>Handle an event, most often by executing the callbacks associated with the event.</summary>
      <param name="evt">The event to handle.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.CallbackEventHandler.HasBubbleHandlers">
      <summary>Return true if event handlers for the event propagation bubble up phase have been attached on this object.</summary>
      <returns>True if object has event handlers for the bubble up phase.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.CallbackEventHandler.HasCaptureHandlers">
      <summary>Return true if event handlers for the event propagation capture phase have been attached on this object.</summary>
      <returns>True if object has event handlers for the capture phase.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.CallbackEventHandler.OnLostCapture">
      <summary>Called when the element loses the capture. Will be removed in a future version.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.bubbles">
      <summary>Returns whether this event type bubbles up in the event propagation path.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.capturable">
      <summary>Return whether this event is sent down the event propagation path during the capture phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.currentTarget">
      <summary>The current target of the event. The current target is the element in the propagation path for which event handlers are currently being executed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.dispatch">
      <summary>Return whether the event is currently being dispatched to visual element. An event can not be redispatched while being dispatched. If you need to recursively redispatch an event, you should use a copy.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.imguiEvent">
      <summary>The IMGUIEvent at the source of this event. This can be null as not all events are generated by IMGUI.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.isDefaultPrevented">
      <summary>Return true if the default actions should not be executed for this event.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.isImmediatePropagationStopped">
      <summary>Return true if StopImmediatePropagation() has been called for this event.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.isPropagationStopped">
      <summary>Return true if StopPropagation() has been called for this event.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.propagationPhase">
      <summary>The current propagation phase.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.target">
      <summary>The target for this event. The is the visual element that received the event. Unlike currentTarget, target does not change when the event is sent to elements along the propagation path.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.EventBase.timestamp">
      <summary>The time at which the event was created.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.EventBase.GetEventTypeId">
      <summary>Get the type id for this event instance.</summary>
      <returns>The type ID.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.EventBase.PreventDefault">
      <summary>Call this function to prevent the execution of the default actions for this event.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.EventBase.StopImmediatePropagation">
      <summary>Immediately stop the propagation of this event. The event will not be sent to any further event handlers on the current target or on any other element in the propagation path.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.EventBase.StopPropagation">
      <summary>Stop the propagation of this event. The event will not be sent to any further element in the propagation path. Further event handlers on the current target will be executed.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.EventBase.EventFlags.None">
      <summary>Empty value.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.EventBase.EventFlags.Bubbles">
      <summary>Event will bubble up the propagation path (i.e. from the target parent up to the visual tree root).</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.EventBase.EventFlags.Capturable">
      <summary>Event will be sent down the propagation path during the capture phase (i.e. from the visual tree root down to the target parent).</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.EventBase.EventFlags.Cancellable">
      <summary>Execution of default behavior for this event can be cancelled.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.FocusController.SwitchFocusOnEvent(UnityEngine.Experimental.UIElements.EventBase)">
      <summary>Ask the controller to change the focus according to the event. The focus controller will use its focus ring to choose the next element to be focused.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.Focusable.canGrabFocus">
      <summary>Return true if the element can be focused.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.Focusable.focusController">
      <summary>Return the focus controller for this element.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.Focusable.focusIndex">
      <summary>An integer used to sort focusables in the focus ring. A negative value means that the element can not be focused.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.Focusable.Blur">
      <summary>Tell the element to release the focus.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.Focusable.Focus">
      <summary>Attempt to give the focus to this element.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IMGUIEvent.GetPooled(UnityEngine.Event)">
      <summary>Get an event from the event pool and initialize it with the given values. Use this function instead of newing events. Events obtained from this function should be released back to the pool using ReleaseEvent().</summary>
      <param name="systemEvent">The IMGUI event used to initialize the event.</param>
      <returns>An event.</returns>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.FocusChangeDirection.none">
      <summary>The null direction. This is usually used when the focus stays on the same element.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.FocusChangeDirection.unspecified">
      <summary>Focus came from an unspecified direction, for example after a mouse down.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.FocusController.focusedElement">
      <summary>The currently focused element.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.TextField.OnStyleResolved(UnityEngine.Experimental.UIElements.StyleSheets.ICustomStyle)">
      <summary>
        <para>Callback when the styles of an object have changed.</para>
        <para>This method can be overriden to intercept custom style properties which are applied to a VisualElement from USS. It is invoked when styles are re-computed for current object and when a style sheet is re-imported in the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.cursorColor">
      <summary>The color of the cursor.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.doubleClickSelectsWord">
      <summary>Set this to true to allow double-clicks to select the word under the mouse and false if otherwise.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.hasFocus">
      <summary>Returns true if the textfield has the focus and false if otherwise.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.isPasswordField">
      <summary>Set this to true to mask the characters and false if otherwise.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.maskChar">
      <summary>The character used for masking in a password field.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.maxLength">
      <summary>The maximum number of characters this textfield can hold. If 0, there is no limit.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.multiline">
      <summary>Set this to true to allow multiple lines in the textfield and false if otherwise.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.TextField.OnTextChanged">
      <summary>Action that is called whenever the text changes in the textfield.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.TextField.OnTextChangeValidated">
      <summary>Action that is called when the user validates the text in the textfield.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.selectionColor">
      <summary>The color of the text selection.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.TextField.tripleClickSelectsLine">
      <summary>Set this to true to allow triple-clicks to select the line under the mouse and false if otherwise.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.TextField.OnPersistentDataReady">
      <summary>Called when the persistent data is accessible and/or when the data or persistence key have changed (VisualElement is properly parented).</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.PostLayoutEvent.hasNewLayout">
      <summary>True if the layout of the element has changed.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.PostLayoutEvent.GetPooled(System.Boolean)">
      <summary>Get an event from the event pool and initialize it with the given values. Use this function instead of newing events. Events obtained from this function should be released back to the pool using ReleaseEvent().</summary>
      <param name="hasNewLayout">Whether the target layout changed.</param>
      <returns>An event.</returns>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.clippingOptions">
      <summary>Should this element clip painting to its boundaries.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.contentContainer">
      <summary>child elements are added to this element, usually this</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.dataWatch">
      <summary>Access to this element data watch interface.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.enabledInHierarchy">
      <summary>
        <para>Returns true if the <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> is enabled in its own hierarchy.</para>
        <para>This flag verifies if the element is enabled globally. A parent disabling its child VisualElement affects this variable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.enabledSelf">
      <summary>
        <para>Returns true if the <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> is enabled locally.</para>
        <para>This flag isn't changed if the VisualElement is disabled implicitely by one of its parents. To verify this, use enabledInHierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.persistenceKey">
      <summary>
        <para>Used for view data persistence (ie. tree expanded states, scroll position, zoom level).</para>
        <para>If set, it can be combined with the persistenceKeys of the parents to locate persistency data for this <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> in the <see cref="UnityEditor.EditorWindow"></see>'s persistent data store. Not setting this key will disable persistence for this <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see>. To get the fully derived key, call <see cref="UnityEngine.Experimental.UIElements.TextField.GetFullHierarchicalPersistenceKey"></see>.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.schedule">
      <summary>Retrieves this VisualElement's IVisualElementScheduler</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.shadow">
      <summary>Access to this element physical hierarchy</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.style">
      <summary>
        <para>Reference to the style object of this element.</para>
        <para>Contains data computed from USS files or inline styles written to this object in C#.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.userData">
      <summary>This property can be used to associate application-specific user data with this VisualElement.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Add(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Add an element to this element's contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.AddStyleSheetPath(System.String)">
      <summary>Adds this stylesheet file to this element list of applied styles</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.AnyDirty(UnityEngine.Experimental.UIElements.ChangeType)">
      <summary>Checks if any of the ChangeTypes have been marked dirty.</summary>
      <param name="type">The ChangeType(s) to check.</param>
      <returns>True if at least one of the checked ChangeTypes have been marked dirty.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Children">
      <summary>Returns the elements from its contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Clear">
      <summary>Remove all child elements from this element's contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Contains(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Returns true if the element is a direct child of this VisualElement</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.ElementAt(System.Int32)">
      <summary>Retrieves the child element at position</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.FindAncestorUserData">
      <summary>
        <para>Searchs up the hierachy of this VisualElement and retrieves stored userData, if any is found.</para>
        <para>This will ignore the current userData and return the first parent's non-null userData</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.GetEnumerator">
      <summary>Allows to iterate into this elements children</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.GetFullHierarchicalPersistenceKey">
      <summary>Combine this VisualElement's <see cref="UnityEngine.Experimental.UIElements.VisualElement.persistenceKey"></see> with those of its parents to create a more unique key for use with <see cref="UnityEngine.Experimental.UIElements.TextField.GetOrCreatePersistentData``1"></see>.</summary>
      <returns>Full hierarchical persistence key.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.OnPersistentDataReady">
      <summary>
        <para>Called when the persistent data is accessible and/or when the data or persistence key have changed (VisualElement is properly parented).</para>
        <para>Override this method for any work you need to do with objects being persisted. When this method is called, it is guaranteed that the persistent store is available and the <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> is properly parented.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.OnStyleResolved(UnityEngine.Experimental.UIElements.StyleSheets.ICustomStyle)">
      <summary>
        <para>Callback when the styles of an object have changed.</para>
        <para>This method can be overriden to intercept custom style properties which are applied to a VisualElement from USS. It is invoked when styles are re-computed for current object and when a style sheet is re-imported in the Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.OverwriteFromPersistedData(System.Object,System.String)">
      <summary>
        <para>Overwrite object from the persistent data store.</para>
        <para>This will overwrite all public and [SerializeField]-marked fields on the given object (meant to usually be the current VisualElement). It's better to use this method if the fields you want to persist on your VisualElement are mostly basic types and you don't want to create a class for them.</para>
      </summary>
      <param name="obj">Object to overwrite.</param>
      <param name="key">The key for the current <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> to be used with the persistence store on the <see cref="UnityEditor.EditorWindow"></see>.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Remove(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Removes this child from the hierarchy</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.RemoveAt(System.Int32)">
      <summary>Remove the child element located at this position from this element's contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.RemoveFromHierarchy">
      <summary>Removes this element from its parent hierarchy</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.RemoveStyleSheetPath(System.String)">
      <summary>Removes this stylesheet file from this element list of applied styles</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.SavePersistentData">
      <summary>
        <para>Write persistence data to file.</para>
        <para>This will write all persistence data on the current <see cref="UnityEditor.EditorWindow"></see> to file. Call when is most appropriate for your <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> but note that there is a file write involved.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.SetEnabled(System.Boolean)">
      <summary>
        <para>Changes the <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> enabled state. A disabled VisualElement does not receive most events.</para>
        <para>The method disables the local flag of the VisualElement and implicitly disables its children. It does not affect the local enabled flag of each child.</para>
      </summary>
      <param name="value">New enabled state</param>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.canGrabFocus">
      <summary>Return true if the element can be focused.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.focusController">
      <summary>Return the focus controller for this element.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Focus">
      <summary>Attempt to give the focus to this element.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.UQueryExtensions.Query(UnityEngine.Experimental.UIElements.VisualElement,System.String,System.String)">
      <summary>Initializes a QueryBuilder with the specified selection rules.</summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="className">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>QueryBuilder configured with the associated selection rules.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.UQueryExtensions.Query(UnityEngine.Experimental.UIElements.VisualElement,System.String,System.String[])">
      <summary>Initializes a QueryBuilder with the specified selection rules.</summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="classes">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>QueryBuilder configured with the associated selection rules.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.UQueryExtensions.Query(UnityEngine.Experimental.UIElements.VisualElement,System.String,System.String[])">
      <summary>Initializes a QueryBuilder with the specified selection rules. Template parameter specifies the type of elements the selector applies to (ie: Label, Button, etc).</summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="classes">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>QueryBuilder configured with the associated selection rules.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.UQueryExtensions.Query(UnityEngine.Experimental.UIElements.VisualElement,System.String,System.String)">
      <summary>Initializes a QueryBuilder with the specified selection rules. Template parameter specifies the type of elements the selector applies to (ie: Label, Button, etc).</summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <param name="name">If specified, will select elements with this name.</param>
      <param name="className">If specified, will select elements with the given class (not to be confused with Type).</param>
      <returns>QueryBuilder configured with the associated selection rules.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.UQueryExtensions.Query(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Initializes an empty QueryBuilder on a specified root element.</summary>
      <param name="e">Root VisualElement on which the selector will be applied.</param>
      <returns>An empty QueryBuilder on a specified root element.</returns>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.ClippingOptions.NoClipping">
      <summary>Will disable clipping and let children <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see>s paint outside its bounds.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.ClippingOptions.ClipAndCacheContents">
      <summary>Enables clipping and renders contents to a cache texture.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.MeasureMode.Undefined">
      <summary>The element should give its preferred width/height without any constraint.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.MeasureMode.Exactly">
      <summary>The element should give the width/height that is passed in and derive the opposite site from this value (for example, calculate text size from a fixed width).</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.MeasureMode.AtMost">
      <summary>At Most. The element should give its preferred width/height but no more than the value passed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.childCount">
      <summary>Number of child elements in this object's contentContainer</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElement.ClippingOptions.ClipContents">
      <summary>Will enable clipping. This <see cref="UnityEngine.Experimental.UIElements.VisualElement"></see> and its children's content will be limited to this element's bounds.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.childCount">
      <summary>Number of child elements in this object's contentContainer</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.parent">
      <summary>Access the physical parent of this element in the hierarchy</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.Add(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Add an element to this element's contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.Children">
      <summary>Returns the elements from its contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.Clear">
      <summary>Remove all child elements from this element's contentContainer</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.ElementAt(System.Int32)">
      <summary>Retrieves the child element at position</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.Remove(UnityEngine.Experimental.UIElements.VisualElement)">
      <summary>Removes this child from the hierarchy</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElement.Hierarchy.RemoveAt(System.Int32)">
      <summary>Remove the child element located at this position from this element's contentContainer</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElementFocusChangeDirection.left">
      <summary>The focus is moving to the left.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElementFocusChangeDirection.right">
      <summary>The focus is moving to the right.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.VisualElementFocusRing.defaultFocusOrder">
      <summary>The focus order for elements having 0 has a focusIndex.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElementFocusRing.GetFocusChangeDirection(UnityEngine.Experimental.UIElements.Focusable,UnityEngine.Experimental.UIElements.EventBase)">
      <summary>Get the direction of the focus change for the given event. For example, when the Tab key is pressed, focus should be given to the element to the right in the focus ring.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.VisualElementFocusRing.GetNextFocusable(UnityEngine.Experimental.UIElements.Focusable,UnityEngine.Experimental.UIElements.FocusChangeDirection)">
      <summary>Get the next element in the given direction.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElementFocusRing.DefaultFocusOrder.ChildOrder">
      <summary>Order elements using a depth-first pre-order traversal of the element tree.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElementFocusRing.DefaultFocusOrder.PositionXY">
      <summary>Order elements according to their position, first by X, then by Y.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.VisualElementFocusRing.DefaultFocusOrder.PositionYX">
      <summary>Order elements according to their position, first by Y, then by X.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IEventDispatcher.capture">
      <summary>The element capturing the mouse, if any.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventDispatcher.DispatchEvent(UnityEngine.Experimental.UIElements.EventBase,UnityEngine.Experimental.UIElements.IPanel)">
      <summary>Dispatch an event to the panel.</summary>
      <param name="evt">The event to dispatch.</param>
      <param name="panel">The panel where the event will be dispatched.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventDispatcher.ReleaseCapture(UnityEngine.Experimental.UIElements.IEventHandler)">
      <summary>Release the capture.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventDispatcher.RemoveCapture">
      <summary>Release capture and notify capturing element.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventDispatcher.TakeCapture(UnityEngine.Experimental.UIElements.IEventHandler)">
      <summary>Take the capture.</summary>
      <param name="handler">The element that takes the capture.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventHandler.HandleEvent(UnityEngine.Experimental.UIElements.EventBase)">
      <summary>Handle an event.</summary>
      <param name="evt">The event to handle.</param>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventHandler.HasBubbleHandlers">
      <summary>Return true if event handlers for the event propagation bubble up phase have been attached on this object.</summary>
      <returns>True if object has event handlers for the bubble up phase.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventHandler.HasCaptureHandlers">
      <summary>Return true if event handlers for the event propagation capture phase have been attached on this object.</summary>
      <returns>True if object has event handlers for the capture phase.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IEventHandler.OnLostCapture">
      <summary>Callback executed when the event handler loses the capture.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.altKey">
      <summary>Return true if the Alt key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.button">
      <summary>Integer representing the pressed mouse button: 0 is left, 1 is right, 2 is center.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.clickCount">
      <summary>Number of clicks.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.commandKey">
      <summary>Return true if the Windows/Command key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.ctrlKey">
      <summary>Return true if the Control key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.localMousePosition">
      <summary>The mouse position in the current target coordinate system.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.modifiers">
      <summary>Flag set holding the pressed modifier keys (Alt, Control, Shift, Windows/Command).</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.mouseDelta">
      <summary>Mouse position difference between the last mouse event and this one.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.mousePosition">
      <summary>The mouse position in the panel coordinate system.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IMouseEvent.shiftKey">
      <summary>Return true if the Shift key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IPanel.focusController">
      <summary>Return the focus controller for this panel.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IFocusEvent.direction">
      <summary>Direction of the focus change.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IFocusEvent.relatedTarget">
      <summary>Related target. See implementation for specific meaning.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.WheelEvent.delta">
      <summary>The amount of scrolling applied on the mouse wheel.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.WheelEvent.GetPooled(UnityEngine.Event)">
      <summary>Get an event from the event pool and initialize it with the given values. Use this function instead of newing events. Events obtained from this function should be released back to the pool using ReleaseEvent().</summary>
      <param name="systemEvent">A wheel IMGUI event.</param>
      <returns>A wheel event.</returns>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IFocusRing.GetFocusChangeDirection(UnityEngine.Experimental.UIElements.Focusable,UnityEngine.Experimental.UIElements.EventBase)">
      <summary>Get the direction of the focus change for the given event. For example, when the Tab key is pressed, focus should be given to the element to the right.</summary>
    </member>
    <member name="M:UnityEngine.Experimental.UIElements.IFocusRing.GetNextFocusable(UnityEngine.Experimental.UIElements.Focusable,UnityEngine.Experimental.UIElements.FocusChangeDirection)">
      <summary>Get the next element in the given direction.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.altKey">
      <summary>Return true if the Alt key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.character">
      <summary>The character.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.commandKey">
      <summary>Return true if the Windows/Command key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.ctrlKey">
      <summary>Return true if the Control key is pressed.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.keyCode">
      <summary>The key code.</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.modifiers">
      <summary>Flag set holding the pressed modifier keys (Alt, Control, Shift, Windows/Command).</summary>
    </member>
    <member name="P:UnityEngine.Experimental.UIElements.IKeyboardEvent.shiftKey">
      <summary>Return true if the Shift key is pressed.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.PositionType.Relative">
      <summary>The element is positioned in relation to its default box as calculated by layout.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.PositionType.Absolute">
      <summary>The element is positioned in relation to its parent box and does not contribute to the layout anymore.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Wrap.NoWrap">
      <summary>All elements are placed on the same line.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Wrap.Wrap">
      <summary>Elements are placed over multiple lines.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Align.Auto">
      <summary>Default value (currently FlexStart).</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Align.FlexStart">
      <summary>Items are aligned at the beginning on the cross axis.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Align.Center">
      <summary>Items are centered on the cross axis.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Align.FlexEnd">
      <summary>Items are aligned at the end on the cross axis.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Align.Stretch">
      <summary>Stretches items on the cross axis.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.FlexDirection.Column">
      <summary>Vertical layout.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.FlexDirection.ColumnReverse">
      <summary>Vertical layout in reverse order.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.FlexDirection.Row">
      <summary>Horizontal layout.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.FlexDirection.RowReverse">
      <summary>Horizontal layout in reverse order.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Justify.FlexStart">
      <summary>Items are justified towards the beginning of the main axis.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Justify.Center">
      <summary>Items are centered.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Justify.FlexEnd">
      <summary>Items are justified towards the end of the layout direction.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Justify.SpaceBetween">
      <summary>Items are evenly distributed in the line; first item is at the beginning of the line, last item is at the end.</summary>
    </member>
    <member name="F:UnityEngine.Experimental.UIElements.StyleEnums.Justify.SpaceAround">
      <summary>Items are evenly distributed in the line with extra space on each end of the line.</summary>
    </member>
  </members>
</doc>