<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.8.0.0 -->
  <assembly>
    <name>UnityEngine.UnityWebRequestTextureModule</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Networking.DownloadHandlerTexture">
      <summary>
        <para>A <see cref="UnityEngine.Networking.DownloadHandler"></see> subclass specialized for downloading images for use as <see cref="UnityEngine.Texture"></see> objects.</para>
        <para>DownloadHandlerTexture stores received data in a pre-allocated Unity <see cref="UnityEngine.Texture"></see> object. It is optimized for downloading images from Web servers, and performs image decompression and decoding on a worker thread. For use cases where you wish to download an image via HTTP and use it as a Texture within Unity, usage of this class is strongly recommended.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.UnityWebRequestTexture">
      <summary>Helpers for downloading image files into Textures using <see cref="UnityEngine.Networking.UnityWebRequest"></see>.</summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandlerTexture.texture">
      <summary>
        <para>Returns the downloaded <see cref="UnityEngine.Texture"></see>, or <c>null</c>. (Read Only)</para>
        <para>This property returns a <see cref="UnityEngine.Texture"></see> object. If Unity was unable to decode the downloaded data, or has not yet finished decompressing/decoding the downloaded data, this property will return <c>null</c>. If all data has not yet been downloaded, accessing this property will throw an <c>InvalidOperationException</c>. <c>Note:</c> This property will return a reference to the <c>same</c><see cref="UnityEngine.Texture"></see> object on every call. Accessing this property causes no additional memory allocation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerTexture.GetContent(UnityEngine.Networking.UnityWebRequest)">
      <summary>
        <para>Returns the downloaded <see cref="UnityEngine.Texture"></see>, or <c>null</c>.</para>
        <para>A static function provided for convenience; equivalent to ((DownloadHandlerTexture)www.downloadHandler).texture.</para>
      </summary>
      <param name="www">A finished UnityWebRequest object with <see cref="UnityEngine.Networking.DownloadHandlerTexture"></see> attached.</param>
      <returns>The same as <see cref="UnityEngine.Networking.DownloadHandlerTexture.texture"></see></returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequestTexture.GetTexture(System.String)">
      <summary>
        <para>Create a <see cref="UnityEngine.Networking.UnityWebRequest"></see> intended to download an image via HTTP GET and create a <see cref="UnityEngine.Texture"></see> based on the retrieved data.</para>
        <para>This method creates a <see cref="UnityEngine.Networking.UnityWebRequest"></see> and sets the target URL to the string <c>uri</c> argument. This method sets no other flags or custom headers. This method attaches a <see cref="UnityEngine.Networking.DownloadHandlerTexture"></see> object to the <see cref="UnityEngine.Networking.UnityWebRequest"></see>. <see cref="UnityEngine.Networking.DownloadHandlerTexture"></see> is a specialized <see cref="UnityEngine.Networking.DownloadHandler"></see> which is optimized for storing images which are to be used as textures in the Unity Engine. Using this class significantly reduces memory reallocation compared to downloading raw bytes and creating a texture manually in script. In addition, texture conversion will be performed on a worker thread. This method attaches no <see cref="UnityEngine.Networking.UploadHandler"></see> to the <see cref="UnityEngine.Networking.UnityWebRequest"></see>. Please note that the texture will be created as if it stores color data. If you need to download linear data use <see cref="UnityEngine.ImageConversion.LoadImage"></see>. UnityWebRequest.GetTexture is obsolete. Use UnityWebRequestTexture.GetTexture instead.</para>
      </summary>
      <param name="uri">The URI of the image to download.</param>
      <returns>A <see cref="UnityEngine.Networking.UnityWebRequest"></see> properly configured to download an image and convert it to a <see cref="UnityEngine.Texture"></see>.</returns>
      <seealso cref="P:UnityEditor.TextureImporter.sRGBTexture">
      </seealso>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequestTexture.GetTexture(System.String,System.Boolean)">
      <summary>
        <para>Create a <see cref="UnityEngine.Networking.UnityWebRequest"></see> intended to download an image via HTTP GET and create a <see cref="UnityEngine.Texture"></see> based on the retrieved data.</para>
        <para>This method creates a <see cref="UnityEngine.Networking.UnityWebRequest"></see> and sets the target URL to the string <c>uri</c> argument. This method sets no other flags or custom headers. This method attaches a <see cref="UnityEngine.Networking.DownloadHandlerTexture"></see> object to the <see cref="UnityEngine.Networking.UnityWebRequest"></see>. <see cref="UnityEngine.Networking.DownloadHandlerTexture"></see> is a specialized <see cref="UnityEngine.Networking.DownloadHandler"></see> which is optimized for storing images which are to be used as textures in the Unity Engine. Using this class significantly reduces memory reallocation compared to downloading raw bytes and creating a texture manually in script. In addition, texture conversion will be performed on a worker thread. This method attaches no <see cref="UnityEngine.Networking.UploadHandler"></see> to the <see cref="UnityEngine.Networking.UnityWebRequest"></see>. Please note that the texture will be created as if it stores color data. If you need to download linear data use <see cref="UnityEngine.ImageConversion.LoadImage"></see>. UnityWebRequest.GetTexture is obsolete. Use UnityWebRequestTexture.GetTexture instead.</para>
      </summary>
      <param name="uri">The URI of the image to download.</param>
      <param name="nonReadable">If true, the texture's raw data will not be accessible to script. This can conserve memory. Default: <c>false</c>.</param>
      <returns>A <see cref="UnityEngine.Networking.UnityWebRequest"></see> properly configured to download an image and convert it to a <see cref="UnityEngine.Texture"></see>.</returns>
      <seealso cref="P:UnityEditor.TextureImporter.sRGBTexture">
      </seealso>
    </member>
  </members>
</doc>